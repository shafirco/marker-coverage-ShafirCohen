name: Release

on:
  push:
    tags:
      - 'v*'   # e.g., v0.2.0

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake pkg-config libopencv-dev ninja-build

      - name: Configure
        run: cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package CLI
        run: |
          mkdir -p dist
         
          cp build/marker_coverage dist/ || true
          tar czf marker_coverage_${{ github.ref_name }}_linux_x64.tgz -C dist .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: marker_coverage_${{ github.ref_name }}_linux_x64
          path: marker_coverage_${{ github.ref_name }}_linux_x64.tgz

  docker:
    name: Build & Push Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-artifacts]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: marker_coverage_${{ github.ref_name }}_linux_x64
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            marker_coverage_${{ github.ref_name }}_linux_x64.tgz
